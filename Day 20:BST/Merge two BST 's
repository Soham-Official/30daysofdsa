https://practice.geeksforgeeks.org/problems/merge-two-bst-s/0/?track=md-BST&batchId=144

void inorder(Node *root,vector<int> &v)
    {
        if(root==NULL)
        return ;
        inorder(root->left,v);
        v.push_back(root->data);
        inorder(root->right,v);
    }
    vector<int> merge(Node *root1, Node *root2)
    {
       vector<int>v1;
       vector<int>v2;
       vector<int>ans;
       inorder(root1,v1);
       inorder(root2,v2);
      int n=v1.size();
      int m=v2.size();
      int i=0,j=0;
      if(n==0 and m==0)
      return ans;
      while(i<n and j<m)
      {
          if(v1[i]<=v2[j]){
          ans.push_back(v1[i]);
          i++;
          }
          else{
              ans.push_back(v2[j]);
              j++;
          }
      }
      while(i<n){
      ans.push_back(v1[i]);
      i++;
      }
      while(j<m){
      ans.push_back(v2[j]);
      j++;
      }
       return ans;
    }
