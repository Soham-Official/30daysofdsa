https://practice.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/0/?track=dsa-workshop-1-greedy&batchId=308

bool myCmp(Job arr1, Job arr2)
    {
     return arr1.profit > arr2.profit;
    }
    public:
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        sort(arr, arr+n, [](Job arr1, Job arr2){ return arr1.profit > arr2.profit; });
        int maxdead=INT_MIN;
        int count=0,sum=0;
        // for(int i=0;i<n;i++)
        // {
        //     maxdead=max(maxdead,arr[i].dead);
        // }
        // cout<<maxdead;
        vector<int>v(101,0);
    //     for(int i = 0; i < n; i++)
    // {
    //     for(int j = arr[i].dead; j > 0; j--)
    //     {
    //         if(v[j] == 0)
    //         {
    //             count += 1;
    //             sum += arr[i].profit;
    //             v[j] = 1;
    //             break;
    //         }
    //     }
    // }
        for(int i=0;i<n;i++)
        {
            
            if(v[arr[i].dead]==0)
            {
                count++;
                v[arr[i].dead]=1;
                sum+=arr[i].profit;
                
            }
            else
            {
                // cout<<"xdfhx"<<" ";
                for(int j=arr[i].dead-1;j>0;j--)
                {
                    if(v[j]==0)
                    {
                      count++;
                      v[j]=1;
                      sum+=arr[j].profit;
                      break;
                    }
                }
            }
        }
        // cout<<sum;
        vector<int>ans;
        ans.push_back(count);
        ans.push_back(sum);
        return ans;
    } 
