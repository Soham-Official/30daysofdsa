https://practice.geeksforgeeks.org/problems/strongly-connected-component-tarjanss-algo-1587115621/0/?track=md-graph&batchId=144

 void dfs(int node, stack<int> &st, vector<int> &vis, vector<int> adj[]) {
    vis[node] = 1; 
    for(auto it: adj[node]) {
        if(!vis[it]) {
            dfs(it, st, vis, adj); 
        }
    }
    
    st.push(node); 
}
void revDfs(int node, vector<int> &vis, vector<int> transpose[],vector<int> &buffer) {
    // cout << node << " "; 
    buffer.push_back(node);
    vis[node] = 1; 
    for(auto it: transpose[node]) {
        if(!vis[it]) {
            revDfs(it, vis, transpose,buffer); 
        }
    }
}
    vector<vector<int>> tarjans(int n, vector<int> adj[])
    {
      stack<int> st;
	  vector<int> vis(n, 0); 
	  vector<vector<int>>ans;
	  
	  for(int i = 0;i<n;i++) 
	  {
	    if(!vis[i]) 
	        dfs(i, st, vis, adj); 
	  }
	  vector<int> transpose[n]; 
	  for(int i = 0;i<n;i++) {
	    vis[i] = 0; 
	    for(auto it: adj[i]) {
	        transpose[it].push_back(i); 
	    }
	}
	int c=0;
	while(!st.empty()) {
	    int node = st.top();
	    st.pop(); 
	    if(!vis[node]) {
	        vector<int>buffer;
	        revDfs(node, vis, transpose,buffer); 
	        sort(buffer.begin(),buffer.end());
	        ans.push_back(buffer);
	    }
	}
	sort(ans.begin(),ans.end());
	return ans;
    }
