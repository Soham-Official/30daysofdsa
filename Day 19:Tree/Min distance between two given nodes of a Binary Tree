https://practice.geeksforgeeks.org/problems/min-distance-between-two-given-nodes-of-a-binary-tree/0/?track=dsa-workshop-1-trees&batchId=308

int dist(Node *root,int n1,int n2)
   {
       if(root==NULL)
       return -1;
       if(root->data==n1)
       return n2;
       int left=dist(root->left,n1,n2+1);
       if(left!=-1)
       return left;
       return dist(root->right,n1,n2+1);
   }
   Node* lca(Node* root ,int n1 ,int n2 )
    {
       if(root==NULL)
       return NULL;
       if(root->data==n1 or root->data==n2)
       return root;
       Node* leftlca=lca(root->left,n1,n2);
       Node* rightlca=lca(root->right,n1,n2);
       if(leftlca !=NULL and rightlca!=NULL)
       return root;
       if(leftlca==NULL and rightlca==NULL)
       return NULL;
       if(leftlca!=NULL)
       return lca(root->left,  n1, n2);
       return lca(root->right,  n1, n2);
    }
int findDist(Node* root, int a, int b) {
    Node* lca1=lca(root,a,b);
    return dist(lca1,a,0)+dist(lca1,b,0);
}
